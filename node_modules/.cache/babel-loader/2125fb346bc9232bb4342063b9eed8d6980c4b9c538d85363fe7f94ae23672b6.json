{"ast":null,"code":"var _jsxFileName = \"/Users/adeshpadwal/Desktop/Web Development/React/React Course/textutils/Text-Utilities-by-using-React-JS/src/My Components/About.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function About() {\n  _s();\n  const [myStyle, setMyStyle] = useState({\n    color: \"black\",\n    backgroundColor: \"white\"\n  });\n  let full = {\n    height: '100%',\n    width: '100%'\n  };\n  const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\n  const toggleStyle = () => {\n    if (myStyle.color === \"white\") {\n      setMyStyle({\n        color: \"black\",\n        backgroundColor: \"white\"\n      });\n      setBtnText(\"Enable Dark Mode\");\n    } else {\n      setMyStyle({\n        color: \"white\",\n        backgroundColor: \"black\"\n      });\n      setBtnText(\"Enable Light Mode\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: myStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3 mb-3\",\n      style: myStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"accordion\",\n        id: \"accordionExample\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"accordion-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            class: \"accordion-header\",\n            id: \"headingOne\",\n            style: myStyle,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"accordion-button\",\n              type: \"button\",\n              style: myStyle,\n              \"data-bs-toggle\": \"collapse\",\n              \"data-bs-target\": \"#collapseOne\",\n              \"aria-expanded\": \"true\",\n              \"aria-controls\": \"collapseOne\",\n              children: \"Accordion Item #1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: myStyle,\n            id: \"collapseOne\",\n            class: \"accordion-collapse collapse show\",\n            \"aria-labelledby\": \"headingOne\",\n            \"data-bs-parent\": \"#accordionExample\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"accordion-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"This is the first item's accordion body.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 15\n              }, this), \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".accordion-body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 48\n              }, this), \", though the transition does limit overflow.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"accordion-item\",\n          style: myStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            class: \"accordion-header\",\n            id: \"headingTwo\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: myStyle,\n              class: \"accordion-button collapsed\",\n              type: \"button\",\n              \"data-bs-toggle\": \"collapse\",\n              \"data-bs-target\": \"#collapseTwo\",\n              \"aria-expanded\": \"false\",\n              \"aria-controls\": \"collapseTwo\",\n              children: \"Accordion Item #2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"collapseTwo\",\n            class: \"accordion-collapse collapse\",\n            \"aria-labelledby\": \"headingTwo\",\n            \"data-bs-parent\": \"#accordionExample\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"accordion-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"This is the second item's accordion body.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".accordion-body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 48\n              }, this), \", though the transition does limit overflow.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"accordion-item\",\n          style: myStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            class: \"accordion-header\",\n            id: \"headingThree\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: myStyle,\n              class: \"accordion-button collapsed\",\n              type: \"button\",\n              \"data-bs-toggle\": \"collapse\",\n              \"data-bs-target\": \"#collapseThree\",\n              \"aria-expanded\": \"false\",\n              \"aria-controls\": \"collapseThree\",\n              children: \"Accordion Item #3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"collapseThree\",\n            class: \"accordion-collapse collapse\",\n            \"aria-labelledby\": \"headingThree\",\n            \"data-bs-parent\": \"#accordionExample\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"accordion-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"This is the third item's accordion body.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 15\n              }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: \".accordion-body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 48\n              }, this), \", though the transition does limit overflow.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container my-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: toggleStyle,\n            children: btnText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(About, \"QCXB/kGNL8Ct60fEXJLiJqRzpSE=\");\n_c = About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","About","myStyle","setMyStyle","color","backgroundColor","full","height","width","btnText","setBtnText","toggleStyle"],"sources":["/Users/adeshpadwal/Desktop/Web Development/React/React Course/textutils/Text-Utilities-by-using-React-JS/src/My Components/About.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nexport default function About() {\n\n\n    const [myStyle,setMyStyle]=useState({\n        color:\"black\",\n        backgroundColor:\"white\"\n    })\n\n    let full={\n        height:'100%',\n        width:'100%'\n    }\n\n    const [btnText,setBtnText]=useState(\"Enable Dark Mode\")\n\n    const toggleStyle=()=>{\n        if(myStyle.color===\"white\"){\n            setMyStyle({\n                color:\"black\",\n        backgroundColor:\"white\"\n            })\n            setBtnText(\"Enable Dark Mode\")\n        }\n        else{\n            setMyStyle({\n                color:\"white\",\n                backgroundColor:\"black\"\n            })\n            setBtnText(\"Enable Light Mode\")\n        }\n    } \n  return (\n    <div style={myStyle} >\n        <div className=\"container my-3 mb-3\" style={myStyle}>\n        <h1>About Us</h1>\n      <div class=\"accordion\" id=\"accordionExample\">\n        <div class=\"accordion-item\">\n          <h2 class=\"accordion-header\" id=\"headingOne\" style={myStyle}>\n            <button\n              class=\"accordion-button\"\n              type=\"button\"\n              style={myStyle}\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseOne\"\n              aria-expanded=\"true\"\n              aria-controls=\"collapseOne\"\n            >\n              Accordion Item #1\n            </button>\n          </h2>\n          <div\n          style={myStyle}\n            id=\"collapseOne\"\n            class=\"accordion-collapse collapse show\"\n            aria-labelledby=\"headingOne\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div class=\"accordion-body\" >\n                \n              <strong>This is the first item's accordion body.</strong> It is\n              shown by default, until the collapse plugin adds the appropriate\n              classes that we use to style each element. These classes control\n              the overall appearance, as well as the showing and hiding via CSS\n              transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n        <div class=\"accordion-item\" style={myStyle}>\n          <h2 class=\"accordion-header\" id=\"headingTwo\" >\n            <button\n            style={myStyle}\n              class=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseTwo\"\n            >\n              Accordion Item #2\n            </button>\n          </h2>\n          <div\n            id=\"collapseTwo\"\n            class=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingTwo\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div class=\"accordion-body\">\n              <strong>This is the second item's accordion body.</strong> It is\n              hidden by default, until the collapse plugin adds the appropriate\n              classes that we use to style each element. These classes control\n              the overall appearance, as well as the showing and hiding via CSS\n              transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n        <div class=\"accordion-item\" style={myStyle}>\n          <h2 class=\"accordion-header\" id=\"headingThree\">\n            <button\n            style={myStyle}\n              class=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseThree\"\n            >\n              Accordion Item #3\n            </button>\n          </h2>\n          <div\n            id=\"collapseThree\"\n            class=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingThree\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div class=\"accordion-body\">\n              <strong>This is the third item's accordion body.</strong> It is\n              hidden by default, until the collapse plugin adds the appropriate\n              classes that we use to style each element. These classes control\n              the overall appearance, as well as the showing and hiding via CSS\n              transitions. You can modify any of this with custom CSS or\n              overriding our default variables. It's also worth noting that just\n              about any HTML can go within the <code>.accordion-body</code>,\n              though the transition does limit overflow.\n            </div>\n          </div>\n        </div>\n        <div className=\"container my-3\">\n        <button className=\"btn btn-primary\" onClick={toggleStyle}>{btnText}</button>\n        </div>\n        \n      </div>\n    </div>\n    </div>\n    \n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAEtC,eAAe,SAASC,KAAK,GAAG;EAAA;EAG5B,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACH,QAAQ,CAAC;IAChCI,KAAK,EAAC,OAAO;IACbC,eAAe,EAAC;EACpB,CAAC,CAAC;EAEF,IAAIC,IAAI,GAAC;IACLC,MAAM,EAAC,MAAM;IACbC,KAAK,EAAC;EACV,CAAC;EAED,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACV,QAAQ,CAAC,kBAAkB,CAAC;EAEvD,MAAMW,WAAW,GAAC,MAAI;IAClB,IAAGT,OAAO,CAACE,KAAK,KAAG,OAAO,EAAC;MACvBD,UAAU,CAAC;QACPC,KAAK,EAAC,OAAO;QACrBC,eAAe,EAAC;MACZ,CAAC,CAAC;MACFK,UAAU,CAAC,kBAAkB,CAAC;IAClC,CAAC,MACG;MACAP,UAAU,CAAC;QACPC,KAAK,EAAC,OAAO;QACbC,eAAe,EAAC;MACpB,CAAC,CAAC;MACFK,UAAU,CAAC,mBAAmB,CAAC;IACnC;EACJ,CAAC;EACH,oBACE;IAAK,KAAK,EAAER,OAAQ;IAAA,uBAChB;MAAK,SAAS,EAAC,qBAAqB;MAAC,KAAK,EAAEA,OAAQ;MAAA,wBACpD;QAAA,UAAI;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAK,eACnB;QAAK,KAAK,EAAC,WAAW;QAAC,EAAE,EAAC,kBAAkB;QAAA,wBAC1C;UAAK,KAAK,EAAC,gBAAgB;UAAA,wBACzB;YAAI,KAAK,EAAC,kBAAkB;YAAC,EAAE,EAAC,YAAY;YAAC,KAAK,EAAEA,OAAQ;YAAA,uBAC1D;cACE,KAAK,EAAC,kBAAkB;cACxB,IAAI,EAAC,QAAQ;cACb,KAAK,EAAEA,OAAQ;cACf,kBAAe,UAAU;cACzB,kBAAe,cAAc;cAC7B,iBAAc,MAAM;cACpB,iBAAc,aAAa;cAAA,UAC5B;YAED;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QACN,eACL;YACA,KAAK,EAAEA,OAAQ;YACb,EAAE,EAAC,aAAa;YAChB,KAAK,EAAC,kCAAkC;YACxC,mBAAgB,YAAY;YAC5B,kBAAe,mBAAmB;YAAA,uBAElC;cAAK,KAAK,EAAC,gBAAgB;cAAA,wBAEzB;gBAAA,UAAQ;cAAwC;gBAAA;gBAAA;gBAAA;cAAA,QAAS,8WAMxB;gBAAA,UAAM;cAAe;gBAAA;gBAAA;gBAAA;cAAA,QAAO,gDAE/D;YAAA;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eACN;UAAK,KAAK,EAAC,gBAAgB;UAAC,KAAK,EAAEA,OAAQ;UAAA,wBACzC;YAAI,KAAK,EAAC,kBAAkB;YAAC,EAAE,EAAC,YAAY;YAAA,uBAC1C;cACA,KAAK,EAAEA,OAAQ;cACb,KAAK,EAAC,4BAA4B;cAClC,IAAI,EAAC,QAAQ;cACb,kBAAe,UAAU;cACzB,kBAAe,cAAc;cAC7B,iBAAc,OAAO;cACrB,iBAAc,aAAa;cAAA,UAC5B;YAED;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QACN,eACL;YACE,EAAE,EAAC,aAAa;YAChB,KAAK,EAAC,6BAA6B;YACnC,mBAAgB,YAAY;YAC5B,kBAAe,mBAAmB;YAAA,uBAElC;cAAK,KAAK,EAAC,gBAAgB;cAAA,wBACzB;gBAAA,UAAQ;cAAyC;gBAAA;gBAAA;gBAAA;cAAA,QAAS,+WAMzB;gBAAA,UAAM;cAAe;gBAAA;gBAAA;gBAAA;cAAA,QAAO,gDAE/D;YAAA;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eACN;UAAK,KAAK,EAAC,gBAAgB;UAAC,KAAK,EAAEA,OAAQ;UAAA,wBACzC;YAAI,KAAK,EAAC,kBAAkB;YAAC,EAAE,EAAC,cAAc;YAAA,uBAC5C;cACA,KAAK,EAAEA,OAAQ;cACb,KAAK,EAAC,4BAA4B;cAClC,IAAI,EAAC,QAAQ;cACb,kBAAe,UAAU;cACzB,kBAAe,gBAAgB;cAC/B,iBAAc,OAAO;cACrB,iBAAc,eAAe;cAAA,UAC9B;YAED;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QACN,eACL;YACE,EAAE,EAAC,eAAe;YAClB,KAAK,EAAC,6BAA6B;YACnC,mBAAgB,cAAc;YAC9B,kBAAe,mBAAmB;YAAA,uBAElC;cAAK,KAAK,EAAC,gBAAgB;cAAA,wBACzB;gBAAA,UAAQ;cAAwC;gBAAA;gBAAA;gBAAA;cAAA,QAAS,+WAMxB;gBAAA,UAAM;cAAe;gBAAA;gBAAA;gBAAA;cAAA,QAAO,gDAE/D;YAAA;cAAA;cAAA;cAAA;YAAA;UAAM;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eACN;UAAK,SAAS,EAAC,gBAAgB;UAAA,uBAC/B;YAAQ,SAAS,EAAC,iBAAiB;YAAC,OAAO,EAAES,WAAY;YAAA,UAAEF;UAAO;YAAA;YAAA;YAAA;UAAA;QAAU;UAAA;UAAA;UAAA;QAAA,QACtE;MAAA;QAAA;QAAA;QAAA;MAAA,QAEF;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACA;AAGV;AAAC,GA/IuBR,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}